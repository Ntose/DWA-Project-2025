@*
    This partial view includes the necessary JavaScript libraries for client-side validation
    in ASP.NET Core MVC applications. It should be included in the Scripts section of pages
    that contain forms with validation.
*@

<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script>
    // Optional: Custom validation styling and behavior
    $(document).ready(function () {
        // Add Bootstrap validation classes on validation events
        $('form').on('invalid-form.validate', function () {
            $(this).find('.field-validation-error').each(function () {
                $(this).closest('.form-group, .mb-3').find('.form-control')
                    .addClass('is-invalid')
                    .removeClass('is-valid');
            });
        });

        $('form').on('valid-form.validate', function () {
            $(this).find('.form-control').each(function () {
                if ($(this).closest('.form-group, .mb-3').find('.field-validation-error').length === 0) {
                    $(this).addClass('is-valid').removeClass('is-invalid');
                }
            });
        });

        // Real-time validation feedback
        $('form input').on('blur keyup', function () {
            var $input = $(this);
            var $container = $input.closest('.form-group, .mb-3');
            var $validationSpan = $container.find('.field-validation-error, .field-validation-valid');

            // Trigger validation
            $input.valid();

            // Add appropriate Bootstrap classes
            if ($validationSpan.hasClass('field-validation-error') && $validationSpan.text().trim() !== '') {
                $input.addClass('is-invalid').removeClass('is-valid');
            } else if ($input.val().trim() !== '') {
                $input.addClass('is-valid').removeClass('is-invalid');
            } else {
                $input.removeClass('is-valid is-invalid');
            }
        });

        // Remove validation classes when user starts typing
        $('form input').on('input', function () {
            var $input = $(this);
            if ($input.hasClass('is-invalid')) {
                $input.removeClass('is-invalid');
            }
        });
    });
</script>